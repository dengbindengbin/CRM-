package com._520it.crm.web.controller;

import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.GregorianCalendar;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import javax.servlet.http.HttpServletRequest;

import jxl.write.DateTime;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.context.request.RequestContextHolder;
import org.springframework.web.context.request.ServletRequestAttributes;
import com._520it.crm.domain.Stockoutcomebillitem;
import com._520it.crm.util.AjaxResult;
import com._520it.crm.util.DateUtil;
import com._520it.crm.page.PageResult;
import com._520it.crm.query.QueryObject;
import com._520it.crm.query.SearchQuery;
import com._520it.crm.service.IStockoutcomebillitemService;

@Controller
public class StockOutcomeBillItemController {
	@Autowired
	IStockoutcomebillitemService stockOutcomeBillItemService;
	
	@RequestMapping("/stockOutcomeBillItem")
	public String index(){
		return "stockOutcomeBillItem";
	}
	@SuppressWarnings("deprecation")
	@RequestMapping("/stockOutcomeBillItem_list")
	@ResponseBody
	public PageResult list(SearchQuery qo) throws ParseException{
		PageResult pageResult = null;
		if(qo!=null&&qo.getAmount()!=null){
			Date date = DateUtil.getAgoDate(qo.getAmount());//获取到想要比较的时间
			qo.setStartTime(DateUtil.getStartDate(date));
			qo.setEndTime(DateUtil.getEndDate(date));
		}
		pageResult = stockOutcomeBillItemService.queryPage(qo);
		return pageResult;
	}
	@RequestMapping("/stockOutcomeBillItem_index")
	@ResponseBody
	public List<Stockoutcomebillitem> list(){
		 List<Stockoutcomebillitem> selectAll = stockOutcomeBillItemService.selectAll();
		return selectAll;
	}
	@RequestMapping("/stockOutcomeBillItem_save")
	@ResponseBody
	public AjaxResult save(Stockoutcomebillitem stockOutcomeBillItem){
		AjaxResult result = null;
		try{
			stockOutcomeBillItemService.insert(stockOutcomeBillItem);
			result = new AjaxResult(true,"保存成功");
		}catch(Exception e){
			e.printStackTrace();
			result = new AjaxResult(false,"保存失败,请联系管理员！");
		}
		return result;
	}
	@RequestMapping("/stockOutcomeBillItem_update")
	@ResponseBody
	public AjaxResult update(Stockoutcomebillitem stockOutcomeBillItem){
		AjaxResult result = null;
		try{
			stockOutcomeBillItemService.updateByPrimaryKey(stockOutcomeBillItem);
			result = new AjaxResult(true,"更新成功");
		}catch(Exception e){
			e.printStackTrace();
			result = new AjaxResult(false,"更新失败,请联系管理员！");
		}
		return result;
	}
	@RequestMapping("/stockOutcomeBillItem_delete")
	@ResponseBody
	public AjaxResult delete(Long stockOutcomeBillItemId){
		AjaxResult result = null;
		try{
			stockOutcomeBillItemService.deleteByPrimaryKey(stockOutcomeBillItemId);
			result = new AjaxResult(true,"删除成功");
		}catch(Exception e){
			e.printStackTrace();
			result = new AjaxResult(false,"删除失败,请联系管理员！");
		}
		return result;
	}
}
