/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.47
 * Generated at: 2017-09-01 01:41:21 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class linechart_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(1);
    _jspx_dependants.put("/static/common/common.jsp", Long.valueOf(1503749843159L));
  }

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=utf-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<link href=\"/static/css/Richangzhichu.css\" rel=\"stylesheet\" />\r\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write(" \t<meta charset=\"utf-8\">\r\n");
      out.write("    <title>ECharts</title>\r\n");
      out.write("    <link rel=\"stylesheet\" type=\"text/css\" href=\"/static/css/component.css\" />\r\n");
      out.write("<link rel=\"stylesheet\" type=\"text/css\"\r\n");
      out.write("\thref=\"/static/plugins/easyui/themes/ui-pepper-grinder/easyui.css\">\r\n");
      out.write("<!--æ ·å¼æä»¶-->\r\n");
      out.write("<link rel=\"stylesheet\" type=\"text/css\"\r\n");
      out.write("\thref=\"/static/plugins/easyui/themes/icon.css\">\r\n");
      out.write("<!--å¾æ æ ·å¼-->\r\n");
      out.write("<script type=\"text/javascript\"\r\n");
      out.write("\tsrc=\"/static/plugins/easyui/jquery.min.js\"></script>\r\n");
      out.write("<!--ç¹å®çæ¬çjQueryçæ ¸å¿æä»¶-->\r\n");
      out.write("<script type=\"text/javascript\"\r\n");
      out.write("\tsrc=\"/static/plugins/easyui/jquery.easyui.min.js\"></script>\r\n");
      out.write("<!-- easyuiçæ ¸å¿å-->\r\n");
      out.write("<script type=\"text/javascript\"\r\n");
      out.write("\tsrc=\"/static/plugins/easyui/locale/easyui-lang-zh_CN.js\"></script>\r\n");
      out.write("<!--è¯­è¨æ¯æå-->\r\n");
      out.write("<script type=\"text/javascript\"\r\n");
      out.write("\tsrc=\"/static/js/base.js\"></script>\r\n");
      out.write("<!-- EasyUIæé®çè¡¥ä¸å -->\r\n");
      out.write("\r\n");
      out.write("<script type=\"text/javascript\" src=\"/static/js/linechart.js\"></script>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("<form action=\"/linechart\" method=\"post\" id=\"line_from\">\r\n");
      out.write("\t<div class=\"Fxjuzczxtu borbot1\">\r\n");
      out.write("                        <div class=\"maxks mat15\">\r\n");
      out.write("                            <p>开始时间：<i> <em><input type=\"text\" name=\"begin\" id=\"begin\" class=\"easyui-datebox\" /> </em> </i></p>\r\n");
      out.write("                            <p>结束时间：<i> <em><input type=\"text\" name=\"end\" id=\"end\" class=\"easyui-datebox\" /></em> </i></p>\r\n");
      out.write("                            <p>自定义：<i> <em>\r\n");
      out.write("                            <select id=\"select1\">\r\n");
      out.write("                            <option id=\"0\"  value=\"0\" onclick=\"all()\">---请选择---</option>\r\n");
      out.write("                            <option id=\"thisMonth\"  onclick=\"thisMonth()\" value=\"1\" >本月</option>\r\n");
      out.write("                            <option id=\"lastMonth\" onclick=\"lastMonths()\" value=\"2\" >上月</option>\r\n");
      out.write("                            <option id=\"thisQuarter\" onclick=\"thisQuarter()\" value=\"3\">本季</option>\r\n");
      out.write("                            <option id=\"lastQuarter\" onclick=\"lastQuarter()\" value=\"4\">上季</option>\r\n");
      out.write("                            <option id=\"thisYear\" onclick=\"thisYear()\" value=\"5\">今年</option>\r\n");
      out.write("                            <option id=\"lastYears\" onclick=\"lastYears()\" value=\"6\">去年</option>\r\n");
      out.write("                            </select>\r\n");
      out.write("                            </em> </i></p>\r\n");
      out.write("                        </div>\r\n");
      out.write("                        </div>\r\n");
      out.write("                       <input class=\"act-buts submits\" style=\"color: #FFFFFF\" type=\"submit\" value=\"查询\">\r\n");
      out.write("                        </form>\r\n");
      out.write("<a href=\"/analyze\"><img alt=\"线形图\" src=\"/linchart.jpg\" width=\"50\" height=\"50\"></a>\r\n");
      out.write("    <!-- 为ECharts准备一个具备大小（宽高）的Dom -->\r\n");
      out.write("    <div id=\"main\" style=\"height:400px\"></div>\r\n");
      out.write("    <!-- ECharts单文件引入 -->\r\n");
      out.write("   <script type=\"text/javascript\" src=\"/static/js/echarts-all.js\"></script>\r\n");
      out.write("    <script type=\"text/javascript\">\r\n");
      out.write(" // 基于准备好的dom，初始化echarts图表\r\n");
      out.write("    var myChart = echarts.init(document.getElementById('main')); \r\n");
      out.write("    option = {\r\n");
      out.write("    \t    title : {\r\n");
      out.write("    \t        text: '支出总额',\r\n");
      out.write("    \t        subtext: '金额'\r\n");
      out.write("    \t    },\r\n");
      out.write("    \t    tooltip : {\r\n");
      out.write("    \t        trigger: 'axis'\r\n");
      out.write("    \t    },\r\n");
      out.write("    \t    legend: {\r\n");
      out.write("    \t        data:['商品']\r\n");
      out.write("    \t    },\r\n");
      out.write("    \t    toolbox: {\r\n");
      out.write("    \t        show : true,\r\n");
      out.write("    \t        feature : {\r\n");
      out.write("    \t            mark : {show: true},\r\n");
      out.write("    \t            dataView : {show: true, readOnly: false},\r\n");
      out.write("    \t            magicType : {show: true, type: ['line', 'bar']},\r\n");
      out.write("    \t            restore : {show: true},\r\n");
      out.write("    \t            saveAsImage : {show: true}\r\n");
      out.write("    \t        }\r\n");
      out.write("    \t    },\r\n");
      out.write("    \t    calculable : true,\r\n");
      out.write("    \t    xAxis : [\r\n");
      out.write("    \t        {\r\n");
      out.write("    \t            type : 'category',\r\n");
      out.write("    \t            data : ");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${names}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("//名字\r\n");
      out.write("    \t        }\r\n");
      out.write("    \t    ],\r\n");
      out.write("    \t    yAxis : [\r\n");
      out.write("    \t        {\r\n");
      out.write("    \t            type : 'value'\r\n");
      out.write("    \t        }\r\n");
      out.write("    \t    ],\r\n");
      out.write("    \t    series : [\r\n");
      out.write("    \t        {\r\n");
      out.write("    \t            name:'支出额度',\r\n");
      out.write("    \t            type:'bar',\r\n");
      out.write("    \t            data:");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${prices}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write(",//价格\r\n");
      out.write("    \t            markPoint : {\r\n");
      out.write("    \t                data : [\r\n");
      out.write("    \t                    {type : 'max', name: '最大值'},\r\n");
      out.write("    \t                    {type : 'min', name: '最小值'}\r\n");
      out.write("    \t                ]\r\n");
      out.write("    \t            },\r\n");
      out.write("    \t            markLine : {\r\n");
      out.write("    \t                data : [\r\n");
      out.write("    \t                    {type : 'average', name: '平均值'}\r\n");
      out.write("    \t                ]\r\n");
      out.write("    \t            }\r\n");
      out.write("    \t        }\r\n");
      out.write("    \t        \r\n");
      out.write("    \t    ]\r\n");
      out.write("    \t};\r\n");
      out.write("    \r\n");
      out.write("\r\n");
      out.write("    myChart.setOption(option); \r\n");
      out.write("    </script>\r\n");
      out.write("    <script type=\"text/javascript\">\r\n");
      out.write("    var now = new Date(); //当前日期\r\n");
      out.write("    var nowDayOfWeek = now.getDay(); //今天本周的第几天\r\n");
      out.write("    var nowDay = now.getDate(); //当前日\r\n");
      out.write("    var nowMonth = now.getMonth(); //当前月\r\n");
      out.write("    var nowYear = now.getYear(); //当前年\r\n");
      out.write("    nowYear += (nowYear < 2000) ? 1900 : 0;\r\n");
      out.write("\r\n");
      out.write("    var lastMonthDate = new Date(); //上月日期\r\n");
      out.write("    lastMonthDate.setDate(1);\r\n");
      out.write("    lastMonthDate.setMonth(lastMonthDate.getMonth() - 1);\r\n");
      out.write("    var lastYear = lastMonthDate.getYear();\r\n");
      out.write("    var lastMonth = lastMonthDate.getMonth();\r\n");
      out.write("    //月开始\r\n");
      out.write("    var monthStartDate = new Date(nowYear, nowMonth, 1);\r\n");
      out.write("    //月结束\r\n");
      out.write("    var monthEndDate = new Date(nowYear, nowMonth, getMonthDays(nowMonth));\r\n");
      out.write("    //上月开始\r\n");
      out.write("    var lastMonthStartDate = new Date(nowYear, lastMonth, 1);\r\n");
      out.write("    //上月结束\r\n");
      out.write("    var lastMonthEndDate = new Date(nowYear, lastMonth, getMonthDays(lastMonth));\r\n");
      out.write("    //本季度开始\r\n");
      out.write("\tvar quarterStartDate = new Date(nowYear, getQuarterStartMonth(nowMonth), 1);\r\n");
      out.write("    //本季度结束\r\n");
      out.write("     var quarterEndMonth = getQuarterStartMonth(nowMonth) + 2;\r\n");
      out.write("    var quarterStartDates = new Date(nowYear, quarterEndMonth, getMonthDays(quarterEndMonth));\r\n");
      out.write("   //  上季度开始 \r\n");
      out.write("   var lastquarterStartDate = new Date(nowYear, getQuarterStartMonth(nowMonth - 3), 1);\r\n");
      out.write("   //上季度结束\r\n");
      out.write("     var lastquarterEndMonth = getQuarterStartMonth(nowMonth - 3) + 2;\r\n");
      out.write("    var lastquarterStartDates = new Date(nowYear, quarterEndMonth, getMonthDays(quarterEndMonth));\r\n");
      out.write("   \r\n");
      out.write("    //去年开始\r\n");
      out.write("    var lastYearStartDate = new Date(nowYear - 1, 0, 1);\r\n");
      out.write("    console.log(lastYearStartDate.getFullYear())\r\n");
      out.write("\r\n");
      out.write("    //去年结束\r\n");
      out.write("    var lastYearEndDate = new Date(nowYear - 1, 11, 31);\r\n");
      out.write("    \r\n");
      out.write("    //今年开始\r\n");
      out.write("     var YearStartDate = new Date(nowYear, 0, 1);\r\n");
      out.write("    \r\n");
      out.write("    //今年结束\r\n");
      out.write("    var YearEndDate = new Date(nowYear, 11, 31);\r\n");
      out.write("    console.log(YearEndDate.getFullYear())\r\n");
      out.write("    var beginMonth = ");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${beginMonth}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write(";\r\n");
      out.write("    var endMonth = ");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${endMonth}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write(";\r\n");
      out.write("    var beginYear = ");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${beginYear}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("+1900;\r\n");
      out.write("    var endYear = ");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${endYear}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("+1900;\r\n");
      out.write("    //本月选定\r\n");
      out.write("    if(beginYear == YearStartDate.getFullYear() && endYear == YearEndDate.getFullYear() && beginMonth == monthStartDate.getMonth()+1 && endMonth == monthEndDate.getMonth()+1){\r\n");
      out.write("    \t$(\"#thisMonth\").attr(\"selected\",\"selected\"); \r\n");
      out.write("    }\r\n");
      out.write("  //上月选定\r\n");
      out.write("    if(beginYear == YearStartDate.getFullYear() && endYear == YearEndDate.getFullYear() && beginMonth == lastMonthStartDate.getMonth()+1 && endMonth == lastMonthEndDate.getMonth()+1){\r\n");
      out.write("    \t$(\"#lastMonth\").attr(\"selected\",\"selected\"); \r\n");
      out.write("    \t\r\n");
      out.write("    }\r\n");
      out.write("  \r\n");
      out.write("    //本季度\r\n");
      out.write("    if(beginMonth == quarterStartDate.getMonth()+1 && endMonth == quarterEndMonth+1){\r\n");
      out.write("    \t\r\n");
      out.write("    \t$(\"#thisQuarter\").attr(\"selected\",\"selected\"); \r\n");
      out.write("    }\r\n");
      out.write("    //上季度\r\n");
      out.write("    if(beginMonth == lastquarterStartDate.getMonth()+1 && endMonth == lastquarterEndMonth+1){\r\n");
      out.write("    \t$(\"#lastQuarter\").attr(\"selected\",\"selected\"); \r\n");
      out.write("    }\r\n");
      out.write("    //今年\r\n");
      out.write("    if(beginYear == YearStartDate.getFullYear() && endYear == YearEndDate.getFullYear()&& endMonth == YearEndDate.getMonth()+1 && beginMonth == YearStartDate.getMonth()+1){\r\n");
      out.write("    \t$(\"#thisYear\").attr(\"selected\",\"selected\"); \r\n");
      out.write("    }\r\n");
      out.write("    //去年\r\n");
      out.write("    if(beginYear == lastYearStartDate.getFullYear() && endYear == lastYearEndDate.getFullYear() && endMonth == lastYearEndDate.getMonth()+1 && beginMonth == lastYearStartDate.getMonth()+1){\r\n");
      out.write("    \t$(\"#lastYears\").attr(\"selected\",\"selected\"); \r\n");
      out.write("    }\r\n");
      out.write("    </script>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try { out.clearBuffer(); } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
